{"version":3,"file":"static/webpack/static/development/pages/_app.js.0af263add0b21db336b8.hot-update.js","sources":["webpack:///./components/Header/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  Navbar,\n  Container,\n  Nav,\n  Form,\n  Button,\n  Modal,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { BackdropModal } from \"../Transition\";\nimport { useDispatch } from \"react-redux\";\nimport { parseCookies, destroyCookie } from \"nookies\";\n\nimport * as actions from \"../../store/actions\";\nimport axios from \"../../store/axios-instance\";\nimport Link from \"next/link\";\nimport Signup from \"./Signup\";\nimport Signin from \"./Signin\";\n\nconst Header = React.memo(() => {\n  const dispatch = useDispatch();\n\n  const [isTop, setIsTop] = useState(true);\n  const [modalShow, setModalShow] = useState(false);\n  const [changeView, setChangeView] = useState(false);\n  const [tkn, setTkn] = useState();\n  const [user, setUser] = useState();\n\n  const onLogout = () => dispatch(actions.logout());\n  const onGetUser = () => dispatch(actions.getUser());\n\n  useEffect(() => {\n    const { access_token } = parseCookies();\n    setTkn(access_token);\n    if (access_token) {\n      onGetUser();\n    }\n  }, [tkn, onGetUser]);\n\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const inTop = window.scrollY < 50;\n      if (inTop !== isTop) {\n        setIsTop(inTop);\n      }\n    });\n\n    return () => {\n      document.removeEventListener(\"scroll\", () => {\n        setIsTop(true);\n      });\n    };\n  }, [isTop]);\n\n  const logoutHandler = () => {\n    setTkn();\n    onLogout();\n    destroyCookie(null, \"access_token\");\n    destroyCookie(null, \"refresh_token\");\n  };\n\n  const showModalHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    setModalShow(true);\n  };\n\n  const closeModalHandler = () => {\n    document.body.classList.remove(\"modal-open\");\n    setModalShow(false);\n  };\n\n  const changeViewHandler = () => {\n    setChangeView(!changeView);\n  };\n\n  let auth = (\n    <Form inline>\n      <Button\n        variant=\"primary\"\n        className=\"rounded-pill mr-sm-3\"\n        onClick={showModalHandler}\n      >\n        Sign up\n      </Button>\n    </Form>\n  );\n\n  if (tkn) {\n    auth = (\n      <NavDropdown\n        alignRight\n        title={\n          <img\n            src={user && `http://localhost:5000/static/avatars/${user.avatar}`}\n            width=\"40\"\n            height=\"40\"\n            className=\"rounded-circle\"\n            alt=\"avatar\"\n            style={{ objectFit: \"cover\" }}\n          />\n        }\n      >\n        <Link href=\"/profile\" as=\"/profile\">\n          <NavDropdown.Item className=\"text-hvr-none\" as=\"span\">\n            Profile\n          </NavDropdown.Item>\n        </Link>\n        <Link href=\"/jobs\" as=\"/jobs\">\n          <NavDropdown.Item className=\"text-hvr-none\" as=\"span\">\n            Job List\n          </NavDropdown.Item>\n        </Link>\n        <Link href=\"/logout\">\n          <NavDropdown.Item\n            className=\"text-hvr-none\"\n            as=\"span\"\n            onClick={logoutHandler}\n          >\n            Logout\n          </NavDropdown.Item>\n        </Link>\n      </NavDropdown>\n    );\n  }\n\n  return (\n    <>\n      <Navbar\n        expand=\"lg\"\n        fixed=\"top\"\n        className={isTop ? \"navbar-default\" : \"navbar-scrolled\"}\n      >\n        <Container>\n          <Navbar.Brand>\n            <Link href=\"/\" as=\"/\">\n              <img\n                src={\n                  isTop\n                    ? \"/static/images/logo-navbar-white.png\"\n                    : \"/static/images/logo-navbar.png\"\n                }\n                width=\"160\"\n                height=\"40\"\n                className=\"d-inline-block align-top\"\n                alt=\"Automatch Logo\"\n              />\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto align-items-center\">\n              <Link href=\"/\" as=\"/\">\n                <Nav.Link as=\"a\" className=\"hov_pointer mr-sm-3\">\n                  Home\n                </Nav.Link>\n              </Link>\n              <Link href=\"/#features\" as=\"/#features\">\n                <Nav.Link as=\"a\" className=\"hov_pointer mr-sm-3\">\n                  Features\n                </Nav.Link>\n              </Link>\n              <Link href=\"/#pricing\" as=\"/#pricing\">\n                <Nav.Link as=\"a\" className=\"hov_pointer mr-sm-3\">\n                  Pricing\n                </Nav.Link>\n              </Link>\n              <Link href=\"/#workflows\" as=\"/#workflows\">\n                <Nav.Link as=\"a\" className=\"hov_pointer mr-sm-3\">\n                  Workflows\n                </Nav.Link>\n              </Link>\n              {auth}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <AnimatePresence exitBeforeEnter>\n        {modalShow ? (\n          <motion.div\n            className=\"modal\"\n            style={{ display: \"block\" }}\n            initial={{ opacity: 0, y: -300 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0 }}\n          >\n            <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"bar top\"></div>\n                <div className=\"bar right delay1\"></div>\n                <div className=\"bar bottom delay2\"></div>\n                <div className=\"bar left\"></div>\n                <Modal.Header\n                  className=\"border-0 pb-0 ml-auto\"\n                  closeButton\n                  onClick={closeModalHandler}\n                ></Modal.Header>\n                <div className=\"col-md-8 mx-auto\">\n                  <Modal.Body>\n                    <AnimatePresence exitBeforeEnter key={changeView}>\n                      {changeView ? (\n                        <Signin\n                          viewed={changeViewHandler}\n                          view={changeView}\n                          closed={closeModalHandler}\n                        />\n                      ) : (\n                        <Signup\n                          viewed={changeViewHandler}\n                          view={changeView}\n                          closed={closeModalHandler}\n                        />\n                      )}\n                    </AnimatePresence>\n                  </Modal.Body>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        ) : null}\n      </AnimatePresence>\n      <AnimatePresence exitBeforeEnter>\n        {modalShow ? (\n          <motion.div\n            className=\"modal-backdrop fade show\"\n            initial=\"initial\"\n            animate=\"in\"\n            exit=\"out\"\n            variants={BackdropModal}\n          ></motion.div>\n        ) : null}\n      </AnimatePresence>\n\n      <style jsx>{`\n        :global(.navbar-default) {\n          transition: 500ms ease;\n          background: #021927;\n        }\n        :global(.navbar-default .nav-link) {\n          color: white !important;\n        }\n        :global(.navbar-scrolled) {\n          transition: 500ms ease;\n          background: white;\n          box-shadow: rgb(76, 76, 76) 0px 1px 2px;\n        }\n        :global(.navbar-scrolled .nav-link) {\n          color: black !important;\n        }\n        .modal-content {\n          border: none !important;\n          border-radius: 0px !important;\n          overflow: hidden !important;\n        }\n        :global(.dropdown-toggle::after) {\n          display: none !important;\n        }\n        :global(.dropdown-menu) {\n          padding: 0.5rem !important;\n        }\n        :global(.nav-item\n            .show\n            .dropdown-menu\n            .dropdown-item, .dropdown-item:hover) {\n          background-color: #113951;\n          color: #ffffff;\n          cursor: pointer;\n        }\n        .bar {\n          position: absolute;\n          width: 50px;\n          height: 5px;\n          background: #23ace6;\n          transition: all 2s linear;\n          -webkit-animation-duration: 2s;\n          animation-duration: 2s;\n          -webkit-animation-fill-mode: both;\n          animation-fill-mode: both;\n          -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n        }\n        .bar.delay1 {\n          animation-delay: 1.4s;\n          -webkit-animation-delay: 1.4s;\n        }\n        .bar.delay2 {\n          animation-delay: 1.1s;\n          -webkit-animation-delay: 1.1s;\n        }\n        .top {\n          top: 0px;\n          left: -5px;\n        }\n        .right {\n          top: 18px;\n          right: -23px;\n          transform: rotate(90deg);\n        }\n        .bottom {\n          bottom: 0px;\n          left: -5px;\n        }\n        .left {\n          top: 180px;\n          left: -23px;\n          transform: rotate(90deg);\n        }\n        @-webkit-keyframes h-move {\n          0% {\n            left: -50px;\n          }\n          100% {\n            left: 100%;\n          }\n        }\n        @keyframes h-move {\n          0% {\n            left: -50px;\n          }\n          100% {\n            left: 100%;\n          }\n        }\n        .top,\n        .bottom {\n          -webkit-animation-name: h-move;\n          animation-name: h-move;\n        }\n        @-webkit-keyframes v-move {\n          0% {\n            top: -30px;\n          }\n          100% {\n            top: 110%;\n          }\n        }\n        @keyframes v-move {\n          0% {\n            top: -30px;\n          }\n          100% {\n            top: 110%;\n          }\n        }\n        .right,\n        .left {\n          -webkit-animation-name: v-move;\n          animation-name: v-move;\n        }\n      `}</style>\n    </>\n  );\n});\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AAEA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAacA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjGA;AAAA;AAAA;AAkOA;AAEA;;;;A","sourceRoot":""}