{"version":3,"file":"static/webpack/static/development/pages/_app.js.87c624a8d95b828638dd.hot-update.js","sources":["webpack:///./store/actions/auth.js"],"sourcesContent":["import Router from \"next/router\";\nimport cookie from \"nookies\";\nimport axios from \"../axios-instance\";\nimport * as actionType from \"./actionTypes\";\n\n/*** AUTH ***/\nexport const authStart = () => {\n  return {\n    type: actionType.AUTH_START,\n  };\n};\nexport const authSuccess = (access_token, refresh_token) => {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    access_token: access_token,\n    refresh_token: refresh_token,\n  };\n};\nexport const authlogout = () => {\n  return {\n    type: actionType.AUTH_LOGOUT,\n  };\n};\nexport const refreshTokenSuccess = (access_token) => {\n  return {\n    type: actionType.REFRESH_TOKEN_SUCCESS,\n    access_token: access_token,\n  };\n};\n/*** AUTH ***/\n\nexport const getUserSuccess = (user) => {\n  return {\n    type: actionType.GET_USER,\n    user: user,\n  };\n};\n\nexport const getUser = (ctx) => {\n  return (dispatch) => {\n    const { access_token } = cookie.get(ctx);\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${access_token}` },\n    };\n    axios\n      .get(\"/user\", headerCfg)\n      .then((res) => {\n        dispatch(getUserSuccess(res.data));\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          cookie.destroy(ctx, \"access_token\");\n          cookie.destroy(ctx, \"refresh_token\");\n          dispatch(authlogout());\n          swal({\n            title: \"Uuppsss!\",\n            text: \"Invalid user credential, please re-login!\",\n            icon: \"error\",\n          }).then(() => Router.reload(\"/\"));\n        }\n      });\n  };\n};\n\nexport const logout = (ctx) => {\n  return (dispatch) => {\n    const { access_token } = cookie.get(ctx);\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${access_token}` },\n    };\n    axios.delete(\"/logout\", headerCfg).then(() => {\n      dispatch(authlogout());\n      Router.reload(\"/\");\n    });\n  };\n};\n\nexport const refreshToken = (refresh_token, ctx) => {\n  return (dispatch) => {\n    const { access_token } = cookie.get(ctx);\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${refresh_token}` },\n    };\n    if (access_token && refresh_token) {\n      axios\n        .post(\"/refresh\", null, headerCfg)\n        .then((res) => {\n          cookie.set(null, \"access_token\", res.data.access_token, {\n            maxAge: 30 * 24 * 60 * 60,\n            path: \"/\",\n          });\n          dispatch(refreshTokenSuccess(res.data.access_token));\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n    }\n  };\n};\n\nexport const authCheckState = (ctx) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const { access_token } = cookie.get(ctx);\n    if (access_token) {\n      const { refresh_token } = cookie.get(ctx);\n      if (refresh_token) {\n        dispatch(authSuccess(access_token, refresh_token));\n      }\n    } else {\n      dispatch(authlogout());\n    }\n  };\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}