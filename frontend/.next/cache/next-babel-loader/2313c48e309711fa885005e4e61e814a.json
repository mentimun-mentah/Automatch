{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/paulus/Desktop/automatch/components/Header/Signup.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useCallback } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\";\nimport { Fade } from \"../Transition\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport validator from \"validator\";\nimport cx from \"classnames\";\nimport style from \"./Header.module.css\";\nvar formSignup = {\n  username: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  },\n  email: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  },\n  password: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  },\n  confirmPassword: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  }\n};\n\nvar Signin = function Signin(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(formSignup),\n      signup = _useState[0],\n      setSignup = _useState[1];\n\n  var onSignup = useCallback(function (username, email, password, confirm_password) {\n    return dispatch(actions.authRegister(username, email, password, confirm_password));\n  }, [dispatch]);\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    resetValidation();\n\n    if (formIsValid()) {\n      onSignup(signup.username.value, signup.email.value, signup.password.value, signup.confirmPassword.value);\n    }\n  };\n\n  var inputHandler = function inputHandler(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n\n    var data = _objectSpread({}, signup, _defineProperty({}, name, _objectSpread({}, signup[name], {\n      value: value,\n      isValid: true,\n      message: null\n    })));\n\n    setSignup(data);\n  };\n\n  var resetValidation = function resetValidation() {\n    var state = JSON.parse(JSON.stringify(signup));\n\n    for (var key in state) {\n      if (state[key].hasOwnProperty(\"isValid\")) {\n        state[key].isValid = true, state[key].message = \"\";\n      }\n    }\n\n    setSignup(state);\n  };\n\n  var formIsValid = function formIsValid() {\n    var username = _objectSpread({}, signup.username);\n\n    var email = _objectSpread({}, signup.email);\n\n    var password = _objectSpread({}, signup.password);\n\n    var confirmPassword = _objectSpread({}, signup.confirmPassword);\n\n    var isGood = true;\n\n    if (!validator.isLength(username.value, {\n      min: 6,\n      max: undefined\n    })) {\n      username.isValid = false;\n      username.message = \"Username at least 6 characters\";\n      isGood = false;\n    }\n\n    if (!validator.isEmail(email.value)) {\n      email.isValid = false;\n      email.message = \"Email isn't valid\";\n      isGood = false;\n    }\n\n    if (!validator.isLength(password.value, {\n      min: 6,\n      max: undefined\n    })) {\n      password.isValid = false;\n      password.message = \"Password at least 6 characters\";\n      isGood = false;\n    }\n\n    if (validator.isEmpty(confirmPassword.value)) {\n      confirmPassword.isValid = false;\n      confirmPassword.message = \"Password can't be empty\";\n      isGood = false;\n    }\n\n    if (!validator.equals(confirmPassword.value, password.value)) {\n      confirmPassword.isValid = false;\n      confirmPassword.message = \"Password isn't matches\";\n      isGood = false;\n    }\n\n    if (!isGood) {\n      setSignup({\n        username: username,\n        email: email,\n        password: password,\n        confirmPassword: confirmPassword\n      });\n    }\n\n    return isGood;\n  };\n\n  var switchToSignin = useCallback(function () {\n    props.viewed();\n    resetValidation();\n  }, [props, resetValidation]);\n  var username = signup.username,\n      email = signup.email,\n      password = signup.password,\n      confirmPassword = signup.confirmPassword;\n  var usernameInvalid = cx({\n    \"is-invalid\": !username.isValid\n  });\n  var emailInvalid = cx({\n    \"is-invalid\": !email.isValid\n  });\n  var passwordInvalid = cx({\n    \"is-invalid\": !password.isValid\n  });\n  var confirmInvalid = cx({\n    \"is-invalid\": !confirmPassword.isValid\n  });\n  return __jsx(motion.div, {\n    initial: \"initial\",\n    animate: \"in\",\n    exit: \"out\",\n    variants: Fade,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-md-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center \".concat(style.ff_yeseva),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Welcome Recruiters.\"), __jsx(\"p\", {\n    className: \"text-center text-muted lh-15\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Register as company to start Recruiting hundred of workers more easier, faster and more accurate.\")))), __jsx(Col, {\n    className: \"mx-auto mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmit: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"row-cols-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"Username\"), __jsx(Form.Control, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    onChange: inputHandler,\n    className: usernameInvalid,\n    value: username.value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, username.message)), __jsx(Form.Group, {\n    as: Col,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, \"Email Address\"), __jsx(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email Address\",\n    onChange: inputHandler,\n    className: emailInvalid,\n    value: email.value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, email.message)), __jsx(Form.Group, {\n    as: Col,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    onChange: inputHandler,\n    className: passwordInvalid,\n    value: password.value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, password.message)), __jsx(Form.Group, {\n    as: Col,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, \"Confirm Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    onChange: inputHandler,\n    className: confirmInvalid,\n    value: confirmPassword.value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, confirmPassword.message))), __jsx(Button, {\n    block: true,\n    variants: \"primary\",\n    type: \"submit\",\n    className: \"mt-3 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"Register\")))), __jsx(Row, {\n    className: \"justify-content-md-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"text-center text-muted lh-15\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"To make Automatch work, we log user data and share it with service providers. Click\", \" \"), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"\".concat(\"text-info\", \" \", style.hov_pointer, \" \"),\n    onClick: switchToSignin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \" \", \"\\u201CSign in\\u201D\", \" \")), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"above to accept Automatch\\u2019s Terms of Service & Privacy Policy.\"))))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/paulus/Desktop/automatch/components/Header/Signup.js"],"names":["useState","useCallback","Container","Row","Col","Form","Button","motion","Fade","useDispatch","useSelector","actions","validator","cx","style","formSignup","username","value","isValid","message","email","password","confirmPassword","Signin","props","dispatch","signup","setSignup","onSignup","confirm_password","authRegister","submitHandler","event","preventDefault","resetValidation","formIsValid","inputHandler","target","name","data","state","JSON","parse","stringify","key","hasOwnProperty","isGood","isLength","min","max","undefined","isEmail","isEmpty","equals","switchToSignin","viewed","usernameInvalid","emailInvalid","passwordInvalid","confirmInvalid","ff_yeseva","hov_pointer"],"mappings":"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","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\";\nimport { Fade } from \"../Transition\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as actions from \"../../store/actions\";\nimport validator from \"validator\";\nimport cx from \"classnames\";\nimport style from \"./Header.module.css\";\n\nconst formSignup = {\n  username: { value: \"\", isValid: true, message: \"\" },\n  email: { value: \"\", isValid: true, message: \"\" },\n  password: { value: \"\", isValid: true, message: \"\" },\n  confirmPassword: { value: \"\", isValid: true, message: \"\" },\n};\n\nconst Signin = (props) => {\n  const dispatch = useDispatch();\n  const [signup, setSignup] = useState(formSignup);\n\n  const onSignup = useCallback(\n    (username, email, password, confirm_password) =>\n      dispatch(\n        actions.authRegister(username, email, password, confirm_password)\n      ),\n    [dispatch]\n  );\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    resetValidation();\n    if (formIsValid()) {\n      onSignup(\n        signup.username.value,\n        signup.email.value,\n        signup.password.value,\n        signup.confirmPassword.value\n      );\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { name, value } = event.target;\n    const data = {\n      ...signup,\n      [name]: {\n        ...signup[name],\n        value: value,\n        isValid: true,\n        message: null,\n      },\n    };\n    setSignup(data);\n  };\n\n  const resetValidation = () => {\n    const state = JSON.parse(JSON.stringify(signup));\n    for (let key in state) {\n      if (state[key].hasOwnProperty(\"isValid\")) {\n        (state[key].isValid = true), (state[key].message = \"\");\n      }\n    }\n    setSignup(state);\n  };\n\n  const formIsValid = () => {\n    const username = { ...signup.username };\n    const email = { ...signup.email };\n    const password = { ...signup.password };\n    const confirmPassword = { ...signup.confirmPassword };\n    let isGood = true;\n\n    if (!validator.isLength(username.value, { min: 6, max: undefined })) {\n      username.isValid = false;\n      username.message = \"Username at least 6 characters\";\n      isGood = false;\n    }\n    if (!validator.isEmail(email.value)) {\n      email.isValid = false;\n      email.message = \"Email isn't valid\";\n      isGood = false;\n    }\n    if (!validator.isLength(password.value, { min: 6, max: undefined })) {\n      password.isValid = false;\n      password.message = \"Password at least 6 characters\";\n      isGood = false;\n    }\n    if (validator.isEmpty(confirmPassword.value)) {\n      confirmPassword.isValid = false;\n      confirmPassword.message = \"Password can't be empty\";\n      isGood = false;\n    }\n    if (!validator.equals(confirmPassword.value, password.value)) {\n      confirmPassword.isValid = false;\n      confirmPassword.message = \"Password isn't matches\";\n      isGood = false;\n    }\n\n    if (!isGood) {\n      setSignup({ username, email, password, confirmPassword });\n    }\n\n    return isGood;\n  };\n\n  const switchToSignin = useCallback(() => {\n    props.viewed();\n    resetValidation();\n  }, [props, resetValidation]);\n\n  const { username, email, password, confirmPassword } = signup;\n  const usernameInvalid = cx({ \"is-invalid\": !username.isValid });\n  const emailInvalid = cx({ \"is-invalid\": !email.isValid });\n  const passwordInvalid = cx({ \"is-invalid\": !password.isValid });\n  const confirmInvalid = cx({ \"is-invalid\": !confirmPassword.isValid });\n\n  return (\n    <motion.div initial=\"initial\" animate=\"in\" exit=\"out\" variants={Fade}>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <h2 className={`text-center ${style.ff_yeseva}`}>\n              Welcome Recruiters.\n            </h2>\n            <p className=\"text-center text-muted lh-15\">\n              <small>\n                Register as company to start Recruiting hundred of workers more\n                easier, faster and more accurate.\n              </small>\n            </p>\n          </Col>\n        </Row>\n\n        <Col className=\"mx-auto mt-1\">\n          <Form onSubmit={submitHandler}>\n            <Form.Row>\n              <Row className=\"row-cols-2\">\n                <Form.Group as={Col}>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={inputHandler}\n                    className={usernameInvalid}\n                    value={username.value}\n                  />\n                  <small className=\"form-text text-muted mt-0 mb-n2\">\n                    {username.message}\n                  </small>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email Address\"\n                    onChange={inputHandler}\n                    className={emailInvalid}\n                    value={email.value}\n                  />\n                  <small className=\"form-text text-muted mt-0 mb-n2\">\n                    {email.message}\n                  </small>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={inputHandler}\n                    className={passwordInvalid}\n                    value={password.value}\n                  />\n                  <small className=\"form-text text-muted mt-0 mb-n2\">\n                    {password.message}\n                  </small>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    onChange={inputHandler}\n                    className={confirmInvalid}\n                    value={confirmPassword.value}\n                  />\n                  <small className=\"form-text text-muted mt-0 mb-n2\">\n                    {confirmPassword.message}\n                  </small>\n                </Form.Group>\n              </Row>\n              <Button\n                block\n                variants=\"primary\"\n                type=\"submit\"\n                className=\"mt-3 mb-3\"\n              >\n                Register\n              </Button>\n            </Form.Row>\n          </Form>\n        </Col>\n\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <p className=\"text-center text-muted lh-15\">\n              <small>\n                To make Automatch work, we log user data and share it with\n                service providers. Click{\" \"}\n              </small>\n              <small>\n                <span\n                  className={`${`text-info`} ${style.hov_pointer} `}\n                  onClick={switchToSignin}\n                >\n                  {\" \"}\n                  “Sign in”{\" \"}\n                </span>\n              </small>\n              <small>\n                above to accept Automatch’s Terms of Service &amp; Privacy\n                Policy.\n              </small>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </motion.div>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}