{"ast":null,"code":"import * as actionType from \"./actionTypes\";\nimport { getUser } from \"./index\";\nimport Router from \"next/router\";\nimport axios from \"../axios-instance\";\nimport cookie from \"nookies\";\nimport swal from \"sweetalert\";\n/***JOB SCRAPING***/\n\nexport var jobScrapingStart = function jobScrapingStart() {\n  return {\n    type: actionType.JOB_SCRAPING_START\n  };\n};\nexport var jobScrapingSuccess = function jobScrapingSuccess(user) {\n  return {\n    type: actionType.JOB_SCRAPING_SUCCESS,\n    user: user\n  };\n};\nexport var jobScrapingFail = function jobScrapingFail(error) {\n  return {\n    type: actionType.JOB_SCRAPING_FAIL,\n    error: error\n  };\n};\n/***JOB SCRAPING***/\n\nexport var jobScraping = function jobScraping(url_job, ctx) {\n  return function (dispatch) {\n    dispatch(jobScrapingStart());\n\n    var _cookie$get = cookie.get(ctx),\n        access_token = _cookie$get.access_token;\n\n    var link = {\n      url_job: url_job\n    };\n    var headerCfg = {\n      headers: {\n        Authorization: \"Bearer \".concat(access_token)\n      }\n    };\n    axios.post(\"/scrape-job\", link, headerCfg).then(function (res) {\n      console.log(res.data);\n      dispatch(getUser());\n    })[\"catch\"](function (error) {\n      dispatch(jobScrapingFail(error.response.data));\n\n      if (error.response.data.message) {\n        swal({\n          title: error.response.data.message,\n          text: \"Click register to make your job portal available.\",\n          icon: \"warning\",\n          buttons: [\"Cancel\", \"Register it\"],\n          dangerMode: true\n        }).then(function (willDelete) {\n          if (willDelete) Router.push(\"/job-portal\", \"/job-portal\");\n        });\n      }\n\n      if (error.response.data.url_job) {\n        swal({\n          title: error.response.data.url_job[0],\n          text: \"\",\n          icon: \"error\",\n          button: \"Got it\",\n          dangerMode: true\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/paulus/Desktop/automatch/store/actions/jobs.js"],"names":["actionType","getUser","Router","axios","cookie","swal","jobScrapingStart","type","JOB_SCRAPING_START","jobScrapingSuccess","user","JOB_SCRAPING_SUCCESS","jobScrapingFail","error","JOB_SCRAPING_FAIL","jobScraping","url_job","ctx","dispatch","get","access_token","link","headerCfg","headers","Authorization","post","then","res","console","log","data","response","message","title","text","icon","buttons","dangerMode","willDelete","push","button"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEP,UAAU,CAACQ;AADZ,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLH,IAAAA,IAAI,EAAEP,UAAU,CAACW,oBADZ;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACxC,SAAO;AACLN,IAAAA,IAAI,EAAEP,UAAU,CAACc,iBADZ;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAMP;;AAEA,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,GAAV,EAAkB;AAC3C,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;;AADmB,sBAEMF,MAAM,CAACe,GAAP,CAAWF,GAAX,CAFN;AAAA,QAEXG,YAFW,eAEXA,YAFW;;AAGnB,QAAMC,IAAI,GAAG;AAAEL,MAAAA,OAAO,EAAEA;AAAX,KAAb;AACA,QAAMM,SAAS,GAAG;AAChBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,mBAAYJ,YAAZ;AAAf;AADO,KAAlB;AAGAjB,IAAAA,KAAK,CACFsB,IADH,CACQ,aADR,EACuBJ,IADvB,EAC6BC,SAD7B,EAEGI,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAZ,MAAAA,QAAQ,CAACjB,OAAO,EAAR,CAAR;AACD,KALH,WAMS,UAACY,KAAD,EAAW;AAChBK,MAAAA,QAAQ,CAACN,eAAe,CAACC,KAAK,CAACkB,QAAN,CAAeD,IAAhB,CAAhB,CAAR;;AACA,UAAIjB,KAAK,CAACkB,QAAN,CAAeD,IAAf,CAAoBE,OAAxB,EAAiC;AAC/B3B,QAAAA,IAAI,CAAC;AACH4B,UAAAA,KAAK,EAAEpB,KAAK,CAACkB,QAAN,CAAeD,IAAf,CAAoBE,OADxB;AAEHE,UAAAA,IAAI,EAAE,mDAFH;AAGHC,UAAAA,IAAI,EAAE,SAHH;AAIHC,UAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,aAAX,CAJN;AAKHC,UAAAA,UAAU,EAAE;AALT,SAAD,CAAJ,CAMGX,IANH,CAMQ,UAACY,UAAD,EAAgB;AACtB,cAAIA,UAAJ,EAAgBpC,MAAM,CAACqC,IAAP,CAAY,aAAZ,EAA2B,aAA3B;AACjB,SARD;AASD;;AACD,UAAI1B,KAAK,CAACkB,QAAN,CAAeD,IAAf,CAAoBd,OAAxB,EAAiC;AAC/BX,QAAAA,IAAI,CAAC;AACH4B,UAAAA,KAAK,EAAEpB,KAAK,CAACkB,QAAN,CAAeD,IAAf,CAAoBd,OAApB,CAA4B,CAA5B,CADJ;AAEHkB,UAAAA,IAAI,EAAE,EAFH;AAGHC,UAAAA,IAAI,EAAE,OAHH;AAIHK,UAAAA,MAAM,EAAE,QAJL;AAKHH,UAAAA,UAAU,EAAE;AALT,SAAD,CAAJ;AAOD;AACF,KA5BH;AA6BD,GApCD;AAqCD,CAtCM","sourcesContent":["import * as actionType from \"./actionTypes\";\nimport { getUser } from \"./index\";\nimport Router from \"next/router\";\nimport axios from \"../axios-instance\";\nimport cookie from \"nookies\";\nimport swal from \"sweetalert\";\n\n/***JOB SCRAPING***/\nexport const jobScrapingStart = () => {\n  return {\n    type: actionType.JOB_SCRAPING_START,\n  };\n};\n\nexport const jobScrapingSuccess = (user) => {\n  return {\n    type: actionType.JOB_SCRAPING_SUCCESS,\n    user: user,\n  };\n};\n\nexport const jobScrapingFail = (error) => {\n  return {\n    type: actionType.JOB_SCRAPING_FAIL,\n    error: error,\n  };\n};\n/***JOB SCRAPING***/\n\nexport const jobScraping = (url_job, ctx) => {\n  return (dispatch) => {\n    dispatch(jobScrapingStart());\n    const { access_token } = cookie.get(ctx);\n    const link = { url_job: url_job };\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${access_token}` },\n    };\n    axios\n      .post(\"/scrape-job\", link, headerCfg)\n      .then((res) => {\n        console.log(res.data);\n        dispatch(getUser());\n      })\n      .catch((error) => {\n        dispatch(jobScrapingFail(error.response.data));\n        if (error.response.data.message) {\n          swal({\n            title: error.response.data.message,\n            text: \"Click register to make your job portal available.\",\n            icon: \"warning\",\n            buttons: [\"Cancel\", \"Register it\"],\n            dangerMode: true,\n          }).then((willDelete) => {\n            if (willDelete) Router.push(\"/job-portal\", \"/job-portal\");\n          });\n        }\n        if (error.response.data.url_job) {\n          swal({\n            title: error.response.data.url_job[0],\n            text: \"\",\n            icon: \"error\",\n            button: \"Got it\",\n            dangerMode: true,\n          });\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}