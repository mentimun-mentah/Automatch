{"ast":null,"code":"import Router from \"next/router\";\nimport cookie from \"nookies\";\nimport axios from \"../axios-instance\";\nimport * as actionType from \"./actionTypes\";\n/*** AUTH ***/\n\nexport var authStart = function authStart() {\n  return {\n    type: actionType.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(access_token, refresh_token) {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    access_token: access_token,\n    refresh_token: refresh_token\n  };\n};\nexport var authlogout = function authlogout() {\n  return {\n    type: actionType.AUTH_LOGOUT\n  };\n};\nexport var refreshTokenSuccess = function refreshTokenSuccess(access_token) {\n  return {\n    type: actionType.REFRESH_TOKEN_SUCCESS,\n    access_token: access_token\n  };\n};\n/*** AUTH ***/\n\nexport var getUserSuccess = function getUserSuccess(user) {\n  return {\n    type: actionType.GET_USER,\n    user: user\n  };\n};\nexport var getUser = function getUser(ctx) {\n  return function (dispatch) {\n    var _cookie$get = cookie.get(ctx),\n        access_token = _cookie$get.access_token;\n\n    var headerCfg = {\n      headers: {\n        Authorization: \"Bearer \".concat(access_token)\n      }\n    };\n  };\n};\nexport var logout = function logout(ctx) {\n  return function (dispatch) {\n    var _cookie$get2 = cookie.get(ctx),\n        access_token = _cookie$get2.access_token;\n\n    var headerCfg = {\n      headers: {\n        Authorization: \"Bearer \".concat(access_token)\n      }\n    };\n    axios[\"delete\"](\"/logout\", headerCfg).then(function () {\n      dispatch(authlogout());\n      Router.reload(\"/\");\n    });\n  };\n};\nexport var refreshToken = function refreshToken(refresh_token, ctx) {\n  return function (dispatch) {\n    var _cookie$get3 = cookie.get(ctx),\n        access_token = _cookie$get3.access_token;\n\n    var headerCfg = {\n      headers: {\n        Authorization: \"Bearer \".concat(refresh_token)\n      }\n    };\n\n    if (access_token && refresh_token) {\n      axios.post(\"/refresh\", null, headerCfg).then(function (res) {\n        cookie.set(null, \"access_token\", res.data.access_token, {\n          maxAge: 30 * 24 * 60 * 60,\n          path: \"/\"\n        });\n        dispatch(refreshTokenSuccess(res.data.access_token));\n      })[\"catch\"](function (error) {\n        console.log(error.response);\n      });\n    }\n  };\n};\nexport var authCheckState = function authCheckState(ctx) {\n  return function (dispatch) {\n    dispatch(authStart());\n\n    var _cookie$get4 = cookie.get(ctx),\n        access_token = _cookie$get4.access_token;\n\n    if (access_token) {\n      var _cookie$get5 = cookie.get(ctx),\n          refresh_token = _cookie$get5.refresh_token;\n\n      if (refresh_token) {\n        dispatch(authSuccess(access_token, refresh_token));\n      }\n    } else {\n      dispatch(authlogout());\n    }\n  };\n};","map":{"version":3,"sources":["/Users/paulus/Desktop/automatch/store/actions/auth.js"],"names":["Router","cookie","axios","actionType","authStart","type","AUTH_START","authSuccess","access_token","refresh_token","AUTH_SUCCESS","authlogout","AUTH_LOGOUT","refreshTokenSuccess","REFRESH_TOKEN_SUCCESS","getUserSuccess","user","GET_USER","getUser","ctx","dispatch","get","headerCfg","headers","Authorization","logout","then","reload","refreshToken","post","res","set","data","maxAge","path","error","console","log","response","authCheckState"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\nimport cookie from \"nookies\";\nimport axios from \"../axios-instance\";\nimport * as actionType from \"./actionTypes\";\n\n/*** AUTH ***/\nexport const authStart = () => {\n  return {\n    type: actionType.AUTH_START,\n  };\n};\nexport const authSuccess = (access_token, refresh_token) => {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    access_token: access_token,\n    refresh_token: refresh_token,\n  };\n};\nexport const authlogout = () => {\n  return {\n    type: actionType.AUTH_LOGOUT,\n  };\n};\nexport const refreshTokenSuccess = (access_token) => {\n  return {\n    type: actionType.REFRESH_TOKEN_SUCCESS,\n    access_token: access_token,\n  };\n};\n/*** AUTH ***/\n\nexport const getUserSuccess = (user) => {\n  return {\n    type: actionType.GET_USER,\n    user: user,\n  };\n};\n\nexport const getUser = (ctx) => {\n  return (dispatch) => {\n    const { access_token } = cookie.get(ctx);\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${access_token}` },\n    };\n  };\n};\n\nexport const logout = (ctx) => {\n  return (dispatch) => {\n    const { access_token } = cookie.get(ctx);\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${access_token}` },\n    };\n    axios.delete(\"/logout\", headerCfg).then(() => {\n      dispatch(authlogout());\n      Router.reload(\"/\");\n    });\n  };\n};\n\nexport const refreshToken = (refresh_token, ctx) => {\n  return (dispatch) => {\n    const { access_token } = cookie.get(ctx);\n    const headerCfg = {\n      headers: { Authorization: `Bearer ${refresh_token}` },\n    };\n    if (access_token && refresh_token) {\n      axios\n        .post(\"/refresh\", null, headerCfg)\n        .then((res) => {\n          cookie.set(null, \"access_token\", res.data.access_token, {\n            maxAge: 30 * 24 * 60 * 60,\n            path: \"/\",\n          });\n          dispatch(refreshTokenSuccess(res.data.access_token));\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n    }\n  };\n};\n\nexport const authCheckState = (ctx) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const { access_token } = cookie.get(ctx);\n    if (access_token) {\n      const { refresh_token } = cookie.get(ctx);\n      if (refresh_token) {\n        dispatch(authSuccess(access_token, refresh_token));\n      }\n    } else {\n      dispatch(authlogout());\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}