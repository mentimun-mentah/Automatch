{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport axios from \"../axios-instance\";\nimport Router from \"next/router\";\nimport cookie from \"nookies\";\nimport swal from \"sweetalert\";\nimport * as actionType from \"./actionTypes\";\n/*** AUTH ***/\n\nexport var authStart = function authStart() {\n  return {\n    type: actionType.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(access_token, refresh_token) {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    access_token: access_token,\n    refresh_token: refresh_token\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionType.AUTH_FAIL,\n    error: error\n  };\n};\n/*** AUTH ***/\n\n/*** MODAL ***/\n\nexport var modalReset = function modalReset() {\n  return {\n    type: actionType.MODAL_RESET\n  };\n};\n/*** MODAL ***/\n\nexport var authLogin = function authLogin(email, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var data = {\n      email: email,\n      password: password\n    };\n    axios.post(\"/login\", data).then(function (res) {\n      dispatch(authSuccess(res.data.access_token, res.data.refresh_token));\n      cookie.set(null, \"access_token\", res.data.access_token, {\n        maxAge: 30 * 24 * 60 * 60,\n        path: \"/\"\n      });\n      cookie.set(null, \"refresh_token\", res.data.refresh_token, {\n        maxAge: 30 * 24 * 60 * 60,\n        path: \"/\"\n      });\n      swal({\n        icon: \"success\",\n        title: \"Welcome to Automatch \".concat(res.data.username),\n        timer: 3000\n      }).then(function () {\n        Router.reload(\"/\");\n      });\n    })[\"catch\"](function (err) {\n      dispatch(authFail(err.response));\n    });\n  };\n};\nexport var authRegister = function authRegister(username, email, password, confirm_password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var data = {\n      username: username,\n      email: email,\n      password: password,\n      confirm_password: confirm_password\n    };\n    axios.post(\"/register\", data).then(function () {\n      dispatch(authSuccess(null, null));\n      swal({\n        title: \"Awesome!\",\n        text: \"Check your email to activated your account.\",\n        icon: \"success\"\n      });\n      dispatch(modalReset());\n    })[\"catch\"](function (err) {\n      var _swal;\n\n      swal((_swal = {\n        icon: \"error\",\n        title: \"Register failed!\",\n        text: err.response.data.username\n      }, _defineProperty(_swal, \"text\", err.response.data.email), _defineProperty(_swal, \"text\", err.response.data.password), _defineProperty(_swal, \"timer\", 3000), _swal));\n      dispatch(authFail(err.response.data));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/paulus/Desktop/automatch/store/actions/auth.js"],"names":["axios","Router","cookie","swal","actionType","authStart","type","AUTH_START","authSuccess","access_token","refresh_token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","modalReset","MODAL_RESET","authLogin","email","password","dispatch","data","post","then","res","set","maxAge","path","icon","title","username","timer","reload","err","response","authRegister","confirm_password","text"],"mappings":"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","sourcesContent":["import axios from \"../axios-instance\";\nimport Router from \"next/router\";\nimport cookie from \"nookies\";\nimport swal from \"sweetalert\";\nimport * as actionType from \"./actionTypes\";\n\n/*** AUTH ***/\nexport const authStart = () => {\n  return {\n    type: actionType.AUTH_START,\n  };\n};\nexport const authSuccess = (access_token, refresh_token) => {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    access_token: access_token,\n    refresh_token: refresh_token,\n  };\n};\nexport const authFail = (error) => {\n  return {\n    type: actionType.AUTH_FAIL,\n    error: error,\n  };\n};\n/*** AUTH ***/\n\n/*** MODAL ***/\nexport const modalReset = () => {\n  return {\n    type: actionType.MODAL_RESET,\n  };\n};\n/*** MODAL ***/\n\nexport const authLogin = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const data = { email: email, password: password };\n    axios\n      .post(\"/login\", data)\n      .then((res) => {\n        dispatch(authSuccess(res.data.access_token, res.data.refresh_token));\n        cookie.set(null, \"access_token\", res.data.access_token, {\n          maxAge: 30 * 24 * 60 * 60,\n          path: \"/\",\n        });\n        cookie.set(null, \"refresh_token\", res.data.refresh_token, {\n          maxAge: 30 * 24 * 60 * 60,\n          path: \"/\",\n        });\n        swal({\n          icon: \"success\",\n          title: `Welcome to Automatch ${res.data.username}`,\n          timer: 3000,\n        }).then(() => {\n          Router.reload(\"/\");\n        });\n      })\n      .catch((err) => {\n        dispatch(authFail(err.response));\n      });\n  };\n};\n\nexport const authRegister = (username, email, password, confirm_password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const data = {\n      username: username,\n      email: email,\n      password: password,\n      confirm_password: confirm_password,\n    };\n    axios\n      .post(\"/register\", data)\n      .then(() => {\n        dispatch(authSuccess(null, null));\n        swal({\n          title: \"Awesome!\",\n          text: \"Check your email to activated your account.\",\n          icon: \"success\",\n        });\n        dispatch(modalReset());\n      })\n      .catch((err) => {\n        swal({\n          icon: \"error\",\n          title: \"Register failed!\",\n          text: err.response.data.username,\n          text: err.response.data.email,\n          text: err.response.data.password,\n          timer: 3000,\n        });\n        dispatch(authFail(err.response.data));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}