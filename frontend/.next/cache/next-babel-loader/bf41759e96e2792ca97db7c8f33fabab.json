{"ast":null,"code":"var _jsxFileName = \"/Users/paulus/Desktop/automatch/components/Header/Signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useCallback } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\";\nimport { Fade } from \"../Transition\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport validator from \"validator\";\nimport cx from \"classnames\";\nimport style from \"./Header.module.css\";\nimport axios from \"../../store/axios-instance\";\nconst formSignup = {\n  username: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  },\n  email: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  },\n  password: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  },\n  confirm_password: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  }\n};\n\nconst Signin = props => {\n  const {\n    0: signup,\n    1: setSignup\n  } = useState(formSignup);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const data = {\n      username: signup.username.value,\n      email: signup.email.value,\n      password: signup.password.value,\n      confirm_password: signup.confirm_password.value\n    };\n    console.log(data);\n    resetValidation();\n\n    if (formIsValid) {\n      const data = {\n        username: signup.username.value,\n        email: signup.email.value,\n        password: signup.password.value,\n        confirm_password: signup.confirm_password.value\n      };\n      axios.post(\"/register\", data).then(res => {\n        console.log(\"success\", res.data);\n      }).catch(err => {\n        console.log(err.response.data);\n        const {\n          username,\n          email,\n          password,\n          confirm_password\n        } = err.response.data;\n        const error = err.response.data;\n\n        for (let key in error) {\n          console.log(err.response.data[key]);\n\n          if (error[key].hasOwnProperty(\"isValid\")) {\n            error[key].isValid = false;\n            error[key].message = err.response.data[key];\n            error[key].value = \"\";\n          } //const data = {\n          //...signup,\n          //[key]: {\n          //...signup[key],\n          //value: \"\",\n          //isValid: false,\n          //message: err.response.data[key],\n          //},\n          //};\n          //setSignup(data);\n\n        }\n\n        setSignup(error);\n      });\n    }\n  };\n\n  const inputHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    const data = _objectSpread({}, signup, {\n      [name]: _objectSpread({}, signup[name], {\n        value: value,\n        isValid: true,\n        message: \"\"\n      })\n    });\n\n    setSignup(data);\n  };\n\n  const resetValidation = () => {\n    const state = JSON.parse(JSON.stringify(signup));\n\n    for (let key in state) {\n      if (state[key].hasOwnProperty(\"isValid\")) {\n        state[key].isValid = true;\n        state[key].message = \"\";\n      }\n    }\n\n    setSignup(state);\n  };\n\n  const formIsValid = () => {\n    const username = _objectSpread({}, signup.username);\n\n    const email = _objectSpread({}, signup.email);\n\n    const password = _objectSpread({}, signup.password);\n\n    const confirmPassword = _objectSpread({}, signup.confirm_password);\n\n    let isGood = true;\n\n    if (validator.isEmpty(username.value)) {\n      username.isValid = false;\n      username.message = \"Username can't be empty\";\n      isGood = false;\n    }\n\n    if (!validator.isEmail(email.value)) {\n      email.isValid = false;\n      email.message = \"Email isn't valid\";\n      isGood = false;\n    }\n\n    if (!validator.isLength(password.value, {\n      min: 6,\n      max: undefined\n    })) {\n      password.isValid = false;\n      password.message = \"Password at least 6 characters\";\n      isGood = false;\n    }\n\n    if (validator.isEmpty(confirm_password.value)) {\n      confirm_password.isValid = false;\n      confirm_password.message = \"Password can't be empty\";\n      isGood = false;\n    }\n\n    if (!validator.equals(confirm_password.value, password.value)) {\n      confirm_password.isValid = false;\n      confirm_password.message = \"Password isn't matches\";\n      isGood = false;\n    }\n\n    if (!isGood) {\n      setSignup({\n        username,\n        email,\n        password,\n        confirm_password\n      });\n    }\n\n    return isGood;\n  };\n\n  const switchToSignin = useCallback(() => {\n    props.viewed();\n    resetValidation();\n  }, [props, resetValidation]);\n  const {\n    username,\n    email,\n    password,\n    confirm_password\n  } = signup;\n  const usernameInvalid = cx({\n    \"is-invalid\": !username.isValid\n  });\n  const emailInvalid = cx({\n    \"is-invalid\": !email.isValid\n  });\n  const passwordInvalid = cx({\n    \"is-invalid\": !password.isValid\n  });\n  const confirmInvalid = cx({\n    \"is-invalid\": !confirm_password.isValid\n  });\n  return __jsx(motion.div, {\n    initial: \"initial\",\n    animate: \"in\",\n    exit: \"out\",\n    variants: Fade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: `text-center ${style.ff_yeseva}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Welcome Recruiters.\"), __jsx(\"p\", {\n    className: \"text-center text-muted lh-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Register as company to start Recruiting hundred of workers more easier, faster and more accurate.\")))), __jsx(Col, {\n    className: \"mx-auto mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"row-cols-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, \"Username\"), __jsx(Form.Control, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    onChange: inputHandler,\n    className: usernameInvalid,\n    value: username.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }), !username.isValid && __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, username.message)), __jsx(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, \"Email Address\"), __jsx(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email Address\",\n    onChange: inputHandler,\n    className: emailInvalid,\n    value: email.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }), !email.isValid && __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, email.message)), __jsx(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    onChange: inputHandler,\n    className: passwordInvalid,\n    value: password.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }), !password.isValid && __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, password.message)), __jsx(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, \"Confirm Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    onChange: inputHandler,\n    className: confirmInvalid,\n    value: confirm_password.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }), !confirm_password.isValid && __jsx(\"small\", {\n    className: \"form-text text-muted mt-0 mb-n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, confirm_password.message))), __jsx(Button, {\n    block: true,\n    variants: \"primary\",\n    type: \"submit\",\n    className: \"mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Register\")))), __jsx(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"text-center text-muted lh-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, \"To make Automatch work, we log user data and share it with service providers. Click\", \" \"), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: `${`text-info`} ${style.hov_pointer} `,\n    onClick: switchToSignin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \" \", \"\\u201CSign in\\u201D\", \" \")), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, \"above to accept Automatch\\u2019s Terms of Service & Privacy Policy.\"))))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/paulus/Desktop/automatch/components/Header/Signup.js"],"names":["useState","useCallback","Container","Row","Col","Form","Button","motion","Fade","useDispatch","useSelector","actions","validator","cx","style","axios","formSignup","username","value","isValid","message","email","password","confirm_password","Signin","props","signup","setSignup","submitHandler","event","preventDefault","data","console","log","resetValidation","formIsValid","post","then","res","catch","err","response","error","key","hasOwnProperty","inputHandler","name","target","state","JSON","parse","stringify","confirmPassword","isGood","isEmpty","isEmail","isLength","min","max","undefined","equals","switchToSignin","viewed","usernameInvalid","emailInvalid","passwordInvalid","confirmInvalid","ff_yeseva","hov_pointer"],"mappings":"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","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\";\nimport { Fade } from \"../Transition\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as actions from \"../../store/actions\";\nimport validator from \"validator\";\nimport cx from \"classnames\";\nimport style from \"./Header.module.css\";\nimport axios from \"../../store/axios-instance\";\n\nconst formSignup = {\n  username: { value: \"\", isValid: true, message: \"\" },\n  email: { value: \"\", isValid: true, message: \"\" },\n  password: { value: \"\", isValid: true, message: \"\" },\n  confirm_password: { value: \"\", isValid: true, message: \"\" },\n};\n\nconst Signin = (props) => {\n  const [signup, setSignup] = useState(formSignup);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const data = {\n      username: signup.username.value,\n      email: signup.email.value,\n      password: signup.password.value,\n      confirm_password: signup.confirm_password.value,\n    };\n    console.log(data);\n    resetValidation();\n    if (formIsValid) {\n      const data = {\n        username: signup.username.value,\n        email: signup.email.value,\n        password: signup.password.value,\n        confirm_password: signup.confirm_password.value,\n      };\n      axios\n        .post(\"/register\", data)\n        .then((res) => {\n          console.log(\"success\", res.data);\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n          const {\n            username,\n            email,\n            password,\n            confirm_password,\n          } = err.response.data;\n          const error = err.response.data;\n          for (let key in error) {\n            console.log(err.response.data[key]);\n            if (error[key].hasOwnProperty(\"isValid\")) {\n              error[key].isValid = false;\n              error[key].message = err.response.data[key];\n              error[key].value = \"\";\n            }\n            //const data = {\n            //...signup,\n            //[key]: {\n            //...signup[key],\n            //value: \"\",\n            //isValid: false,\n            //message: err.response.data[key],\n            //},\n            //};\n            //setSignup(data);\n          }\n          setSignup(error);\n        });\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { name, value } = event.target;\n    const data = {\n      ...signup,\n      [name]: {\n        ...signup[name],\n        value: value,\n        isValid: true,\n        message: \"\",\n      },\n    };\n    setSignup(data);\n  };\n\n  const resetValidation = () => {\n    const state = JSON.parse(JSON.stringify(signup));\n    for (let key in state) {\n      if (state[key].hasOwnProperty(\"isValid\")) {\n        state[key].isValid = true;\n        state[key].message = \"\";\n      }\n    }\n    setSignup(state);\n  };\n\n  const formIsValid = () => {\n    const username = { ...signup.username };\n    const email = { ...signup.email };\n    const password = { ...signup.password };\n    const confirmPassword = { ...signup.confirm_password };\n    let isGood = true;\n\n    if (validator.isEmpty(username.value)) {\n      username.isValid = false;\n      username.message = \"Username can't be empty\";\n      isGood = false;\n    }\n    if (!validator.isEmail(email.value)) {\n      email.isValid = false;\n      email.message = \"Email isn't valid\";\n      isGood = false;\n    }\n    if (!validator.isLength(password.value, { min: 6, max: undefined })) {\n      password.isValid = false;\n      password.message = \"Password at least 6 characters\";\n      isGood = false;\n    }\n    if (validator.isEmpty(confirm_password.value)) {\n      confirm_password.isValid = false;\n      confirm_password.message = \"Password can't be empty\";\n      isGood = false;\n    }\n    if (!validator.equals(confirm_password.value, password.value)) {\n      confirm_password.isValid = false;\n      confirm_password.message = \"Password isn't matches\";\n      isGood = false;\n    }\n\n    if (!isGood) {\n      setSignup({ username, email, password, confirm_password });\n    }\n\n    return isGood;\n  };\n\n  const switchToSignin = useCallback(() => {\n    props.viewed();\n    resetValidation();\n  }, [props, resetValidation]);\n\n  const { username, email, password, confirm_password } = signup;\n  const usernameInvalid = cx({ \"is-invalid\": !username.isValid });\n  const emailInvalid = cx({ \"is-invalid\": !email.isValid });\n  const passwordInvalid = cx({ \"is-invalid\": !password.isValid });\n  const confirmInvalid = cx({ \"is-invalid\": !confirm_password.isValid });\n\n  return (\n    <motion.div initial=\"initial\" animate=\"in\" exit=\"out\" variants={Fade}>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <h2 className={`text-center ${style.ff_yeseva}`}>\n              Welcome Recruiters.\n            </h2>\n            <p className=\"text-center text-muted lh-15\">\n              <small>\n                Register as company to start Recruiting hundred of workers more\n                easier, faster and more accurate.\n              </small>\n            </p>\n          </Col>\n        </Row>\n\n        <Col className=\"mx-auto mt-1\">\n          <Form onSubmit={submitHandler}>\n            <Form.Row>\n              <Row className=\"row-cols-2\">\n                <Form.Group as={Col}>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={inputHandler}\n                    className={usernameInvalid}\n                    value={username.value}\n                  />\n                  {!username.isValid && (\n                    <small className=\"form-text text-muted mt-0 mb-n2\">\n                      {username.message}\n                    </small>\n                  )}\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email Address\"\n                    onChange={inputHandler}\n                    className={emailInvalid}\n                    value={email.value}\n                  />\n                  {!email.isValid && (\n                    <small className=\"form-text text-muted mt-0 mb-n2\">\n                      {email.message}\n                    </small>\n                  )}\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={inputHandler}\n                    className={passwordInvalid}\n                    value={password.value}\n                  />\n                  {!password.isValid && (\n                    <small className=\"form-text text-muted mt-0 mb-n2\">\n                      {password.message}\n                    </small>\n                  )}\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    onChange={inputHandler}\n                    className={confirmInvalid}\n                    value={confirm_password.value}\n                  />\n                  {!confirm_password.isValid && (\n                    <small className=\"form-text text-muted mt-0 mb-n2\">\n                      {confirm_password.message}\n                    </small>\n                  )}\n                </Form.Group>\n              </Row>\n              <Button\n                block\n                variants=\"primary\"\n                type=\"submit\"\n                className=\"mt-3 mb-3\"\n              >\n                Register\n              </Button>\n            </Form.Row>\n          </Form>\n        </Col>\n\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <p className=\"text-center text-muted lh-15\">\n              <small>\n                To make Automatch work, we log user data and share it with\n                service providers. Click{\" \"}\n              </small>\n              <small>\n                <span\n                  className={`${`text-info`} ${style.hov_pointer} `}\n                  onClick={switchToSignin}\n                >\n                  {\" \"}\n                  “Sign in”{\" \"}\n                </span>\n              </small>\n              <small>\n                above to accept Automatch’s Terms of Service &amp; Privacy\n                Policy.\n              </small>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </motion.div>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}