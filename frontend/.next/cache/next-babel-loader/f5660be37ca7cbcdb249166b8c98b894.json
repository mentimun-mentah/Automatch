{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/paulus/Desktop/automatch/pages/jobs/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withAuth } from \"../../hoc/withAuth\";\nimport * as actions from \"../../store/actions\";\nimport Router from \"next/router\";\nimport swal from \"sweetalert\";\nimport validator from \"validator\";\nimport Jobs from \"../../components/Jobs/Job\";\nimport EmptyCard from \"../../components/Jobs/EmptyCard\";\nimport JobCard from \"../../components/Jobs/JobCard\";\nvar linkJob = {\n  link: {\n    value: \"\",\n    isValid: true,\n    message: \"\"\n  }\n};\n\nvar JobsContainer = function JobsContainer() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(linkJob),\n      linkjob = _useState[0],\n      setLinkjob = _useState[1];\n\n  var jobs = useSelector(function (state) {\n    return state.auth.user.jobs;\n  });\n  var onJobScraping = useCallback(function (url_job) {\n    return dispatch(actions.jobScraping(url_job));\n  }, [dispatch]);\n\n  var onGetUser = function onGetUser() {\n    return dispatch(actions.getUser());\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    resetValidation();\n\n    if (linkIsValid()) {\n      onJobScraping(linkjob.link.value);\n    }\n  };\n\n  var linkChangeHandler = function linkChangeHandler(event) {\n    var data = _objectSpread({}, linkjob, {\n      link: {\n        value: event.target.value,\n        isValid: true,\n        message: \"\"\n      }\n    });\n\n    setLinkjob(data);\n  };\n\n  var clearLinkjobHandler = useCallback(function () {\n    var data = _objectSpread({}, linkjob, {\n      link: {\n        value: \"\",\n        isValid: true,\n        message: \"\"\n      }\n    });\n\n    setLinkjob(data);\n  }, [linkjob]);\n\n  var linkIsValid = function linkIsValid() {\n    var link = _objectSpread({}, linkjob.link);\n\n    var isGood = true;\n\n    if (validator.isEmpty(link.value, {\n      ignore_whitespace: true\n    })) {\n      link.isValid = false;\n      link.message = null;\n      link.isGood = false;\n      swal({\n        title: \"Upss not found!\",\n        text: \"You can click button register it to make your job portal available.\",\n        icon: \"warning\",\n        buttons: [\"Cancel\", \"Register it\"],\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) Router.push(\"/job-portal\", \"/job-portal\");\n      });\n    }\n\n    if (!isGood) {\n      setLinkjob(link);\n    }\n\n    return isGood;\n  };\n\n  var resetValidation = function resetValidation() {\n    var state = JSON.parse(JSON.stringify(linkjob));\n\n    for (var key in state) {\n      if (state[key].hasOwnProperty(\"isValid\")) {\n        state[key].isValid = true, state[key].message = \"\";\n      }\n    }\n\n    setLinkjob(state);\n  };\n\n  var jobCard = __jsx(EmptyCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  });\n\n  if (jobs !== undefined && jobs.length > 0) {\n    jobCard = __jsx(\"div\", {\n      className: \"row row-cols-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, jobs.map(function (job, i) {\n      var image = job.image,\n          company = job.company,\n          location = job.location,\n          title_job = job.title_job,\n          posted = job.posted,\n          id = job.id;\n      return __jsx(JobCard, {\n        key: i,\n        image: image,\n        company: company,\n        location: location,\n        title_job: title_job,\n        posted: posted,\n        id: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      });\n    }));\n  }\n\n  return __jsx(Jobs, {\n    change: linkChangeHandler,\n    submit: submitHandler,\n    value: linkjob.link.value,\n    clearLink: clearLinkjobHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, jobCard);\n};\n\nJobsContainer.getInitialProps = function (ctx) {\n  ctx.store.dispatch(actions.getUser());\n};\n\nexport default withAuth(JobsContainer);","map":{"version":3,"sources":["/Users/paulus/Desktop/automatch/pages/jobs/index.js"],"names":["useState","useEffect","useCallback","useDispatch","useSelector","withAuth","actions","Router","swal","validator","Jobs","EmptyCard","JobCard","linkJob","link","value","isValid","message","JobsContainer","dispatch","linkjob","setLinkjob","jobs","state","auth","user","onJobScraping","url_job","jobScraping","onGetUser","getUser","submitHandler","event","preventDefault","resetValidation","linkIsValid","linkChangeHandler","data","target","clearLinkjobHandler","isGood","isEmpty","ignore_whitespace","title","text","icon","buttons","dangerMode","then","willDelete","push","JSON","parse","stringify","key","hasOwnProperty","jobCard","undefined","length","map","job","i","image","company","location","title_job","posted","id","getInitialProps","ctx","store"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,IAAtB;AAA4BC,IAAAA,OAAO,EAAE;AAArC;AADQ,CAAhB;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AAD0B,kBAEIH,QAAQ,CAACa,OAAD,CAFZ;AAAA,MAEnBO,OAFmB;AAAA,MAEVC,UAFU;;AAI1B,MAAMC,IAAI,GAAGlB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBH,IAA3B;AAAA,GAAD,CAAxB;AAEA,MAAMI,aAAa,GAAGxB,WAAW,CAC/B,UAACyB,OAAD;AAAA,WAAaR,QAAQ,CAACb,OAAO,CAACsB,WAAR,CAAoBD,OAApB,CAAD,CAArB;AAAA,GAD+B,EAE/B,CAACR,QAAD,CAF+B,CAAjC;;AAIA,MAAMU,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMV,QAAQ,CAACb,OAAO,CAACwB,OAAR,EAAD,CAAd;AAAA,GAAlB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,eAAe;;AACf,QAAIC,WAAW,EAAf,EAAmB;AACjBT,MAAAA,aAAa,CAACN,OAAO,CAACN,IAAR,CAAaC,KAAd,CAAb;AACD;AACF,GAND;;AAQA,MAAMqB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD,EAAW;AACnC,QAAMK,IAAI,qBACLjB,OADK;AAERN,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAEiB,KAAK,CAACM,MAAN,CAAavB,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAE;AAArD;AAFE,MAAV;;AAIAI,IAAAA,UAAU,CAACgB,IAAD,CAAV;AACD,GAND;;AAQA,MAAME,mBAAmB,GAAGrC,WAAW,CAAC,YAAM;AAC5C,QAAMmC,IAAI,qBACLjB,OADK;AAERN,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE;AAArC;AAFE,MAAV;;AAIAI,IAAAA,UAAU,CAACgB,IAAD,CAAV;AACD,GANsC,EAMpC,CAACjB,OAAD,CANoC,CAAvC;;AAQA,MAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMrB,IAAI,qBAAQM,OAAO,CAACN,IAAhB,CAAV;;AACA,QAAI0B,MAAM,GAAG,IAAb;;AAEA,QAAI/B,SAAS,CAACgC,OAAV,CAAkB3B,IAAI,CAACC,KAAvB,EAA8B;AAAE2B,MAAAA,iBAAiB,EAAE;AAArB,KAA9B,CAAJ,EAAgE;AAC9D5B,MAAAA,IAAI,CAACE,OAAL,GAAe,KAAf;AACAF,MAAAA,IAAI,CAACG,OAAL,GAAe,IAAf;AACAH,MAAAA,IAAI,CAAC0B,MAAL,GAAc,KAAd;AACAhC,MAAAA,IAAI,CAAC;AACHmC,QAAAA,KAAK,EAAE,iBADJ;AAEHC,QAAAA,IAAI,EACF,qEAHC;AAIHC,QAAAA,IAAI,EAAE,SAJH;AAKHC,QAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,aAAX,CALN;AAMHC,QAAAA,UAAU,EAAE;AANT,OAAD,CAAJ,CAOGC,IAPH,CAOQ,UAACC,UAAD,EAAgB;AACtB,YAAIA,UAAJ,EAAgB1C,MAAM,CAAC2C,IAAP,CAAY,aAAZ,EAA2B,aAA3B;AACjB,OATD;AAUD;;AACD,QAAI,CAACV,MAAL,EAAa;AACXnB,MAAAA,UAAU,CAACP,IAAD,CAAV;AACD;;AACD,WAAO0B,MAAP;AACD,GAvBD;;AAyBA,MAAMN,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAMX,KAAK,GAAG4B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAejC,OAAf,CAAX,CAAd;;AACA,SAAK,IAAIkC,GAAT,IAAgB/B,KAAhB,EAAuB;AACrB,UAAIA,KAAK,CAAC+B,GAAD,CAAL,CAAWC,cAAX,CAA0B,SAA1B,CAAJ,EAA0C;AACvChC,QAAAA,KAAK,CAAC+B,GAAD,CAAL,CAAWtC,OAAX,GAAqB,IAAtB,EAA8BO,KAAK,CAAC+B,GAAD,CAAL,CAAWrC,OAAX,GAAqB,EAAnD;AACD;AACF;;AACDI,IAAAA,UAAU,CAACE,KAAD,CAAV;AACD,GARD;;AAUA,MAAIiC,OAAO,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AACA,MAAIlC,IAAI,KAAKmC,SAAT,IAAsBnC,IAAI,CAACoC,MAAL,GAAc,CAAxC,EAA2C;AACzCF,IAAAA,OAAO,GACL;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlC,IAAI,CAACqC,GAAL,CAAS,UAACC,GAAD,EAAMC,CAAN,EAAY;AAAA,UACZC,KADY,GACwCF,GADxC,CACZE,KADY;AAAA,UACLC,OADK,GACwCH,GADxC,CACLG,OADK;AAAA,UACIC,QADJ,GACwCJ,GADxC,CACII,QADJ;AAAA,UACcC,SADd,GACwCL,GADxC,CACcK,SADd;AAAA,UACyBC,MADzB,GACwCN,GADxC,CACyBM,MADzB;AAAA,UACiCC,EADjC,GACwCP,GADxC,CACiCO,EADjC;AAEpB,aACE,MAAC,OAAD;AACE,QAAA,GAAG,EAAEN,CADP;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,MAAM,EAAEC,MANV;AAOE,QAAA,EAAE,EAAEC,EAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD,KAbA,CADH,CADF;AAkBD;;AAED,SACE,MAAC,IAAD;AACE,IAAA,MAAM,EAAE/B,iBADV;AAEE,IAAA,MAAM,EAAEL,aAFV;AAGE,IAAA,KAAK,EAAEX,OAAO,CAACN,IAAR,CAAaC,KAHtB;AAIE,IAAA,SAAS,EAAEwB,mBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGiB,OANH,CADF;AAUD,CAvGD;;AAyGAtC,aAAa,CAACkD,eAAd,GAAgC,UAACC,GAAD,EAAS;AACvCA,EAAAA,GAAG,CAACC,KAAJ,CAAUnD,QAAV,CAAmBb,OAAO,CAACwB,OAAR,EAAnB;AACD,CAFD;;AAIA,eAAezB,QAAQ,CAACa,aAAD,CAAvB","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withAuth } from \"../../hoc/withAuth\";\n\nimport * as actions from \"../../store/actions\";\nimport Router from \"next/router\";\nimport swal from \"sweetalert\";\nimport validator from \"validator\";\nimport Jobs from \"../../components/Jobs/Job\";\nimport EmptyCard from \"../../components/Jobs/EmptyCard\";\nimport JobCard from \"../../components/Jobs/JobCard\";\n\nconst linkJob = {\n  link: { value: \"\", isValid: true, message: \"\" },\n};\n\nconst JobsContainer = () => {\n  const dispatch = useDispatch();\n  const [linkjob, setLinkjob] = useState(linkJob);\n\n  const jobs = useSelector((state) => state.auth.user.jobs);\n\n  const onJobScraping = useCallback(\n    (url_job) => dispatch(actions.jobScraping(url_job)),\n    [dispatch]\n  );\n  const onGetUser = () => dispatch(actions.getUser());\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    resetValidation();\n    if (linkIsValid()) {\n      onJobScraping(linkjob.link.value);\n    }\n  };\n\n  const linkChangeHandler = (event) => {\n    const data = {\n      ...linkjob,\n      link: { value: event.target.value, isValid: true, message: \"\" },\n    };\n    setLinkjob(data);\n  };\n\n  const clearLinkjobHandler = useCallback(() => {\n    const data = {\n      ...linkjob,\n      link: { value: \"\", isValid: true, message: \"\" },\n    };\n    setLinkjob(data);\n  }, [linkjob]);\n\n  const linkIsValid = () => {\n    const link = { ...linkjob.link };\n    let isGood = true;\n\n    if (validator.isEmpty(link.value, { ignore_whitespace: true })) {\n      link.isValid = false;\n      link.message = null;\n      link.isGood = false;\n      swal({\n        title: \"Upss not found!\",\n        text:\n          \"You can click button register it to make your job portal available.\",\n        icon: \"warning\",\n        buttons: [\"Cancel\", \"Register it\"],\n        dangerMode: true,\n      }).then((willDelete) => {\n        if (willDelete) Router.push(\"/job-portal\", \"/job-portal\");\n      });\n    }\n    if (!isGood) {\n      setLinkjob(link);\n    }\n    return isGood;\n  };\n\n  const resetValidation = () => {\n    const state = JSON.parse(JSON.stringify(linkjob));\n    for (let key in state) {\n      if (state[key].hasOwnProperty(\"isValid\")) {\n        (state[key].isValid = true), (state[key].message = \"\");\n      }\n    }\n    setLinkjob(state);\n  };\n\n  let jobCard = <EmptyCard />;\n  if (jobs !== undefined && jobs.length > 0) {\n    jobCard = (\n      <div className=\"row row-cols-5\">\n        {jobs.map((job, i) => {\n          const { image, company, location, title_job, posted, id } = job;\n          return (\n            <JobCard\n              key={i}\n              image={image}\n              company={company}\n              location={location}\n              title_job={title_job}\n              posted={posted}\n              id={id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Jobs\n      change={linkChangeHandler}\n      submit={submitHandler}\n      value={linkjob.link.value}\n      clearLink={clearLinkjobHandler}\n    >\n      {jobCard}\n    </Jobs>\n  );\n};\n\nJobsContainer.getInitialProps = (ctx) => {\n  ctx.store.dispatch(actions.getUser());\n};\n\nexport default withAuth(JobsContainer);\n"]},"metadata":{},"sourceType":"module"}